generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(uuid())
  username     String      @unique @db.VarChar(100)
  password     String      @db.VarChar(100)
  email        String      @unique @db.VarChar(100)
  nama_lengkap String      @db.VarChar(100)
  aktif        Boolean     @default(true)
  UserGroup    UserGroup[]
  wali         Wali[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  WaliCreated        Wali[]                @relation("wali_created_by")
  WaliUpdated        Wali[]                @relation("wali_updated_by")
  WaliSantriCreated  WaliSantri[]          @relation("walisantri_created_by")
  WaliSantriUpdated  WaliSantri[]          @relation("walisantri_updated_by")
  SantriCreated      Santri[]              @relation("santri_created_by")
  SantriUpdated      Santri[]              @relation("santri_updated_by")
  KategoriPelCreated KategoriPelanggaran[] @relation("kategoriPel_created_by")
  KategoriPelUpdated KategoriPelanggaran[] @relation("kategoriPel_updated_by")
  KelasSantriCreated KelasSantri[]         @relation("kelasSantri_created_by")
  KelasSantriUpdated KelasSantri[]         @relation("kelasSantri_updated_by")
  KelasCreated       Kelas[]               @relation("kelas_created_by")
  KelasUpdated       Kelas[]               @relation("kelas_updated_by")
  PelanggaranCreated Pelanggaran[]         @relation("pelanggaran_created_by")
  PelanggaranUpdated Pelanggaran[]         @relation("pelanggaran_updated_by")
  KesehatanCreated   Kesehatan[]           @relation("kesehatan_created_by")
  KesehatanUpdated   Kesehatan[]           @relation("kesehatan_updated_by")
  PageAccessCreated  PageAccess[]          @relation("pageaccess_updated_by")
  PageAccessUpdated  PageAccess[]          @relation("pageaccess_created_by")
}

model Page {
  id         Int          @id @default(autoincrement())
  nama       String
  kategori   String
  PageAccess PageAccess[]
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt

  @@unique([nama, kategori], name: "pageIdentifier")
}

model PageAccess {
  id                Int      @id @default(autoincrement())
  Page              Page     @relation(fields: [page_id], references: [id], onDelete: Cascade)
  Group             Group    @relation(fields: [group_id], references: [id], onDelete: Cascade)
  page_id           Int
  group_id          Int
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  last_update_by_id String?
  last_update_by    User?    @relation("pageaccess_updated_by", fields: [last_update_by_id], references: [id])
  created_by_id     String?
  created_by        User?    @relation("pageaccess_created_by", fields: [created_by_id], references: [id])
}

model Group {
  id         Int         @id @default(autoincrement())
  nama_group String      @unique @db.VarChar(100)
  deskripsi  String
  UserGroup  UserGroup[]

  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  PageAccess PageAccess[]
}

model UserGroup {
  id       Int    @id @default(autoincrement())
  user_id  String
  group_id Int
  group    Group  @relation(fields: [group_id], references: [id], onDelete: Cascade)
  user     User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Santri {
  id           Int           @id @default(autoincrement())
  nis          String        @unique @db.VarChar(255)
  nama_lengkap String        @db.VarChar(100)
  alamat       String        @db.VarChar(255)
  email        String        @db.VarChar(100)
  hp           String?       @db.VarChar(25)
  tempat_lahir String        @db.VarChar(100)
  tgl_lhr      DateTime      @db.Date
  foto         String?       @db.VarChar(100)
  jenis_kel    JenisKel      @default(LAKI_LAKI)
  WaliSantri   WaliSantri[]
  KelasSantri  KelasSantri[]

  last_update_by_id String?
  last_update_by    User?   @relation("santri_updated_by", fields: [last_update_by_id], references: [id])
  created_by_id     String?
  created_by        User?   @relation("santri_created_by", fields: [created_by_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum JenisKel {
  LAKI_LAKI
  PEREMPUAN
}

model WaliSantri {
  id        Int       @id @default(autoincrement())
  santri_id Int
  wali_id   Int
  peran     PeranWali
  santri    Santri    @relation(fields: [santri_id], references: [id])
  wali      Wali      @relation(fields: [wali_id], references: [id])

  last_update_by_id String?
  last_update_by    User?   @relation("walisantri_updated_by", fields: [last_update_by_id], references: [id])
  created_by_id     String?
  created_by        User?   @relation("walisantri_created_by", fields: [created_by_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Wali {
  id         Int          @id @default(autoincrement())
  nama_wali  String
  tgl_lhr    DateTime     @db.Date
  email      String?      @unique @db.VarChar(100)
  hp         String?
  user_id    String?
  user       User?        @relation(fields: [user_id], references: [id])
  WaliSantri WaliSantri[]

  last_update_by_id String?
  last_update_by    User?   @relation("wali_updated_by", fields: [last_update_by_id], references: [id])
  created_by_id     String?
  created_by        User?   @relation("wali_created_by", fields: [created_by_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([nama_wali, tgl_lhr], name: "waliIdentifier")
}

enum PeranWali {
  AYAH
  IBU
  WALI
  lainnya
}

model Pelanggaran {
  id               Int                 @id @default(autoincrement())
  kategori_id      Int
  Kategori         KategoriPelanggaran @relation(fields: [kategori_id], references: [id])
  kelassantri_id   Int
  KelasSantri      KelasSantri         @relation(fields: [kelassantri_id], references: [id])
  keterangan       String              @db.Text
  konsekuensi      String              @db.Text
  berkas_penunjang String?

  last_update_by_id String?
  last_update_by    User?   @relation("pelanggaran_updated_by", fields: [last_update_by_id], references: [id])
  created_by_id     String?
  created_by        User?   @relation("pelanggaran_created_by", fields: [created_by_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model KategoriPelanggaran {
  id               Int      @id @default(autoincrement())
  nama_pelanggaran String   @unique
  kategori         Kategori
  jenis            String
  poin             Int      @default(0)

  created_by        User?         @relation("kategoriPel_created_by", fields: [created_by_id], references: [id])
  created_by_id     String?
  last_update_by    User?         @relation("kategoriPel_updated_by", fields: [last_update_by_id], references: [id])
  last_update_by_id String?
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
  Pelangaran        Pelanggaran[]
}

enum Kategori {
  BERAT
  SEDANG
  RINGAN
}

model Tingkat {
  id                Int      @id @default(autoincrement())
  nama_tingkatan    String   @unique @db.VarChar(100)
  keterangan        String   @db.Text
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  created_by_id     String?
  last_update_by_id String?
  Kelas             Kelas[]
}

model TahunAjar {
  id                Int           @id @default(autoincrement())
  kode_ta           String        @unique @db.VarChar(100)
  tgl_mulai         DateTime      @db.Date
  tgl_selesai       DateTime      @db.Date
  aktif             Boolean
  created_by_id     String?
  last_update_by_id String?
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
  KelasSantri       KelasSantri[]

  @@unique([tgl_mulai, tgl_selesai], name: "tahunIdentifier")
}

model Kelas {
  id                Int           @id @default(autoincrement())
  nama_kelas        String        @db.VarChar(200)
  tingkat_id        Int
  Tingkat           Tingkat       @relation(fields: [tingkat_id], references: [id])
  keterangan        String        @db.Text()
  KelasSantri       KelasSantri[]
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
  created_by        User?         @relation("kelas_created_by", fields: [created_by_id], references: [id])
  created_by_id     String?
  last_update_by    User?         @relation("kelas_updated_by", fields: [last_update_by_id], references: [id])
  last_update_by_id String?

  @@unique([nama_kelas, tingkat_id], name: "kelasIdentifier")
}

model KelasSantri {
  id        Int         @id @default(autoincrement())
  kelas_id  Int
  Kelas     Kelas       @relation(fields: [kelas_id], references: [id])
  ta_id     Int
  TahunAjar TahunAjar   @relation(fields: [ta_id], references: [id])
  santri_id Int
  Santri    Santri      @relation(fields: [santri_id], references: [id])
  status    StatusKelas

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
  created_by        User?         @relation("kelasSantri_created_by", fields: [created_by_id], references: [id])
  created_by_id     String?
  last_update_by    User?         @relation("kelasSantri_updated_by", fields: [last_update_by_id], references: [id])
  last_update_by_id String?
  Pelangaran        Pelanggaran[]
  Kesehatan         Kesehatan[]

  @@unique([kelas_id, ta_id, santri_id, status])
}

enum StatusKelas {
  BARU
  ULANG
}

model Kesehatan {
  id             Int             @id @default(autoincrement())
  nama_penyakit  String          @db.VarChar(100)
  penanganan     String          @db.Text
  kategori       Kategori
  tgl_masuk      DateTime
  tgl_keluar     DateTime?
  status         StatusKesehatan
  kelassantri_id Int
  KelasSantri    KelasSantri     @relation(fields: [kelassantri_id], references: [id])

  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  created_by        User?    @relation("kesehatan_created_by", fields: [created_by_id], references: [id])
  created_by_id     String?
  last_update_by    User?    @relation("kesehatan_updated_by", fields: [last_update_by_id], references: [id])
  last_update_by_id String?
}

enum StatusKesehatan {
  PERAWATAN
  SEMBUH
}
